# .github/workflows/tag-release.yml
name: Build and Release for Tags

on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write
  
jobs:
  build-and-release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            os: 'macos'
            args: ''
            target: 'universal-apple-darwin'
            upload-files: |
              frontend/src-tauri/target/universal-apple-darwin/release/bundle/macos/*.app
              frontend/src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
          
          - platform: 'ubuntu-22.04'
            os: 'linux'
            args: ''
            target: 'x86_64-unknown-linux-gnu'
            upload-files: |
              frontend/src-tauri/target/release/bundle/appimage/*.AppImage
              frontend/src-tauri/target/release/bundle/deb/*.deb
          
          - platform: 'windows-latest'
            os: 'windows'
            args: ''
            target: 'x86_64-pc-windows-msvc'
            upload-files: |
              frontend/src-tauri/target/release/bundle/msi/*.msi
              frontend/src-tauri/target/release/bundle/nsis/*.exe

    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Setup common tools that all platforms need
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install uv for Python backend
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        run: uv python install 3.11
      
      # Platform-specific system dependencies
      - name: Install Linux system dependencies
        if: matrix.os == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libgtk-3-dev
      
      # Common setup steps
      - name: Install Python dependencies
        run: uv sync
      
      - name: Install Tauri CLI
        run: cargo install tauri-cli --locked
      
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            frontend/src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('frontend/src-tauri/**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      
      # macOS specific setup for universal builds
      - name: Add macOS targets
        if: matrix.os == 'macos'
        run: |
          rustup target add aarch64-apple-darwin
          rustup target add x86_64-apple-darwin
      
      # Build the application
      - name: Build Tauri app
        working-directory: frontend/src-tauri
        run: |
          cargo tauri build --target ${{ matrix.target }} ${{ matrix.args }}
      
      # Upload artifacts for release
      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.upload-files }}
          draft: false
          prerelease: false