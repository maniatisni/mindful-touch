# .github/workflows/tag-release.yml
name: Build and Release for Tags

on:
  push:
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

permissions:
  contents: write
  
jobs:
  # Build for Linux (AppImage)
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: Install uv for Python backend
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Install Python dependencies
        run: uv sync
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            frontend/src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('frontend/src-tauri/**/Cargo.lock') }}
      
      - name: Build Tauri app
        working-directory: frontend/src-tauri
        run: |
          cargo tauri build
      
      - name: Upload Linux artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frontend/src-tauri/target/release/bundle/appimage/*.AppImage
            frontend/src-tauri/target/release/bundle/deb/*.deb

  # Build for Windows
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install uv for Python backend
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Install Python dependencies
        run: uv sync
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            frontend/src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('frontend/src-tauri/**/Cargo.lock') }}
      
      - name: Build Tauri app
        working-directory: frontend/src-tauri
        run: |
          cargo tauri build
      
      - name: Upload Windows artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frontend/src-tauri/target/release/bundle/msi/*.msi
            frontend/src-tauri/target/release/bundle/nsis/*.exe

  # Build for macOS
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install uv for Python backend
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        run: uv python install 3.11
      
      - name: Install Python dependencies
        run: uv sync
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            frontend/src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('frontend/src-tauri/**/Cargo.lock') }}
      
      - name: Build Tauri app
        working-directory: frontend/src-tauri
        run: |
          cargo tauri build
      
      - name: Upload macOS artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frontend/src-tauri/target/release/bundle/macos/*.app
            frontend/src-tauri/target/release/bundle/dmg/*.dmg
